{
  "policies": {
    "fileStorageApplicationPolicy": {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "ListBucketContents",
          "Effect": "Allow",
          "Action": [
            "s3:ListBucket"
          ],
          "Resource": "arn:aws:s3:::eduhu-files-production",
          "Condition": {
            "StringLike": {
              "s3:prefix": [
                "uploads/*",
                "thumbnails/*",
                "temp/*"
              ]
            }
          }
        },
        {
          "Sid": "FileOperations",
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:GetObjectAcl",
            "s3:GetObjectVersion",
            "s3:PutObject",
            "s3:PutObjectAcl",
            "s3:DeleteObject",
            "s3:AbortMultipartUpload",
            "s3:ListMultipartUploadParts"
          ],
          "Resource": [
            "arn:aws:s3:::eduhu-files-production/uploads/*",
            "arn:aws:s3:::eduhu-files-production/thumbnails/*",
            "arn:aws:s3:::eduhu-files-production/temp/*"
          ]
        },
        {
          "Sid": "GeneratePresignedUrls",
          "Effect": "Allow",
          "Action": [
            "s3:GetObject"
          ],
          "Resource": "arn:aws:s3:::eduhu-files-production/*",
          "Condition": {
            "StringEquals": {
              "s3:ExistingObjectTag/AccessLevel": "public"
            }
          }
        }
      ]
    },
    "fileStorageReadOnlyPolicy": {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "ReadOnlyAccess",
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:ListBucket"
          ],
          "Resource": [
            "arn:aws:s3:::eduhu-files-production",
            "arn:aws:s3:::eduhu-files-production/*"
          ]
        }
      ]
    },
    "fileStorageBackupPolicy": {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "BackupBucketAccess",
          "Effect": "Allow",
          "Action": [
            "s3:ListBucket",
            "s3:GetBucketLocation",
            "s3:GetBucketVersioning"
          ],
          "Resource": [
            "arn:aws:s3:::eduhu-files-production",
            "arn:aws:s3:::eduhu-backups-production"
          ]
        },
        {
          "Sid": "BackupOperations",
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:GetObjectVersion",
            "s3:PutObject",
            "s3:PutObjectAcl"
          ],
          "Resource": [
            "arn:aws:s3:::eduhu-files-production/*",
            "arn:aws:s3:::eduhu-backups-production/*"
          ]
        }
      ]
    },
    "fileStorageMonitoringPolicy": {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "S3Monitoring",
          "Effect": "Allow",
          "Action": [
            "s3:GetBucketNotification",
            "s3:GetBucketLogging",
            "s3:GetBucketRequestPayment",
            "s3:GetBucketVersioning",
            "s3:ListBucket",
            "s3:GetBucketLocation"
          ],
          "Resource": "arn:aws:s3:::eduhu-files-production"
        },
        {
          "Sid": "CloudWatchMetrics",
          "Effect": "Allow",
          "Action": [
            "cloudwatch:GetMetricStatistics",
            "cloudwatch:ListMetrics"
          ],
          "Resource": "*",
          "Condition": {
            "StringEquals": {
              "cloudwatch:namespace": "AWS/S3"
            }
          }
        },
        {
          "Sid": "CloudWatchLogs",
          "Effect": "Allow",
          "Action": [
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents",
            "logs:DescribeLogGroups",
            "logs:DescribeLogStreams"
          ],
          "Resource": "arn:aws:logs:*:*:log-group:/aws/s3/eduhu-files-production*"
        }
      ]
    }
  },
  "bucketPolicies": {
    "fileStorageBucketPolicy": {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "DenyInsecureConnections",
          "Effect": "Deny",
          "Principal": "*",
          "Action": "s3:*",
          "Resource": [
            "arn:aws:s3:::eduhu-files-production",
            "arn:aws:s3:::eduhu-files-production/*"
          ],
          "Condition": {
            "Bool": {
              "aws:SecureTransport": "false"
            }
          }
        },
        {
          "Sid": "AllowApplicationAccess",
          "Effect": "Allow",
          "Principal": {
            "AWS": "arn:aws:iam::ACCOUNT-ID:user/eduhu-app-user-production"
          },
          "Action": [
            "s3:GetObject",
            "s3:PutObject",
            "s3:DeleteObject"
          ],
          "Resource": "arn:aws:s3:::eduhu-files-production/*"
        },
        {
          "Sid": "AllowCloudflareCDN",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "s3:GetObject",
          "Resource": "arn:aws:s3:::eduhu-files-production/uploads/*",
          "Condition": {
            "StringEquals": {
              "aws:Referer": [
                "https://eduhu.ki/*",
                "https://*.eduhu.ki/*",
                "https://*.vercel.app/*"
              ]
            }
          }
        },
        {
          "Sid": "DenyPublicWrite",
          "Effect": "Deny",
          "Principal": "*",
          "Action": [
            "s3:PutObject",
            "s3:DeleteObject",
            "s3:PutObjectAcl"
          ],
          "Resource": "arn:aws:s3:::eduhu-files-production/*",
          "Condition": {
            "StringNotEquals": {
              "aws:userid": [
                "AIDA:eduhu-app-user-production"
              ]
            }
          }
        }
      ]
    }
  },
  "corsConfiguration": {
    "CORSRules": [
      {
        "AllowedHeaders": [
          "*"
        ],
        "AllowedMethods": [
          "GET",
          "PUT",
          "POST",
          "DELETE",
          "HEAD"
        ],
        "AllowedOrigins": [
          "https://eduhu.ki",
          "https://*.eduhu.ki",
          "https://*.vercel.app"
        ],
        "ExposedHeaders": [
          "ETag",
          "x-amz-meta-*"
        ],
        "MaxAge": 3600
      },
      {
        "AllowedHeaders": [
          "Authorization",
          "Content-Type"
        ],
        "AllowedMethods": [
          "GET"
        ],
        "AllowedOrigins": [
          "*"
        ],
        "MaxAge": 86400
      }
    ]
  },
  "lifecycleConfiguration": {
    "Rules": [
      {
        "ID": "DeleteIncompleteMultipartUploads",
        "Status": "Enabled",
        "Filter": {
          "Prefix": ""
        },
        "AbortIncompleteMultipartUpload": {
          "DaysAfterInitiation": 7
        }
      },
      {
        "ID": "TransitionToInfrequentAccess",
        "Status": "Enabled",
        "Filter": {
          "Prefix": "uploads/"
        },
        "Transitions": [
          {
            "Days": 30,
            "StorageClass": "STANDARD_IA"
          },
          {
            "Days": 90,
            "StorageClass": "GLACIER"
          }
        ]
      },
      {
        "ID": "DeleteTempFiles",
        "Status": "Enabled",
        "Filter": {
          "Prefix": "temp/"
        },
        "Expiration": {
          "Days": 7
        }
      },
      {
        "ID": "DeleteOldThumbnails",
        "Status": "Enabled",
        "Filter": {
          "Prefix": "thumbnails/"
        },
        "Expiration": {
          "Days": 365
        }
      }
    ]
  },
  "setupInstructions": {
    "steps": [
      {
        "step": 1,
        "description": "Create IAM User",
        "command": "aws iam create-user --user-name eduhu-app-user-production"
      },
      {
        "step": 2,
        "description": "Attach Policy to User",
        "command": "aws iam put-user-policy --user-name eduhu-app-user-production --policy-name FileStoragePolicy --policy-document file://file-storage-policy.json"
      },
      {
        "step": 3,
        "description": "Create Access Keys",
        "command": "aws iam create-access-key --user-name eduhu-app-user-production"
      },
      {
        "step": 4,
        "description": "Apply Bucket Policy",
        "command": "aws s3api put-bucket-policy --bucket eduhu-files-production --policy file://bucket-policy.json"
      },
      {
        "step": 5,
        "description": "Configure CORS",
        "command": "aws s3api put-bucket-cors --bucket eduhu-files-production --cors-configuration file://cors-config.json"
      },
      {
        "step": 6,
        "description": "Configure Lifecycle",
        "command": "aws s3api put-bucket-lifecycle-configuration --bucket eduhu-files-production --lifecycle-configuration file://lifecycle-config.json"
      }
    ],
    "verification": [
      {
        "check": "Test bucket access",
        "command": "aws s3 ls s3://eduhu-files-production/"
      },
      {
        "check": "Test file upload",
        "command": "aws s3 cp test-file.txt s3://eduhu-files-production/uploads/test-file.txt"
      },
      {
        "check": "Verify CORS configuration",
        "command": "aws s3api get-bucket-cors --bucket eduhu-files-production"
      }
    ]
  }
}